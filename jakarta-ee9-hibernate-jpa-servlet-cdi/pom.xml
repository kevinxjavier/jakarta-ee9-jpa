	<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.kevinpina</groupId>
	<artifactId>jakarta-ee9-hibernate-jpa-servlet-cdi</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<properties>
		<maven.compiler.source>18</maven.compiler.source>
		<maven.compiler.target>18</maven.compiler.target>
		<maven.compiler.release>18</maven.compiler.release><!-- For when we deploying with different JDK -->
		<tomcat.version>10.1.10</tomcat.version><!-- For deploying for a specific Tomcat -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<jakarta.version>10.0.0</jakarta.version>
		<lombok.version>1.18.30</lombok.version>
		<jackson.version>2.15.2</jackson.version>
		<java-standard-tag-library-glassfish.version>3.0.1</java-standard-tag-library-glassfish.version>
		<java-standard-tag-library.version>3.0.0</java-standard-tag-library.version>
		<weld-servlet.version>5.1.1.SP2</weld-servlet.version>
		<hibernate-core.version>5.6.14.Final</hibernate-core.version>
		<jandex.version>3.0.5</jandex.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>jakarta.platform</groupId>
			<artifactId>jakarta.jakartaee-api</artifactId>
			<version>${jakarta.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>jakarta.servlet.jsp.jstl</artifactId>
			<version>${java-standard-tag-library-glassfish.version}</version>
		</dependency>
		<dependency>
			<groupId>jakarta.servlet.jsp.jstl</groupId>
			<artifactId>jakarta.servlet.jsp.jstl-api</artifactId>
			<version>${java-standard-tag-library.version}</version>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>org.jboss.weld.servlet</groupId>-->
<!--			<artifactId>weld-servlet-core</artifactId>-->
<!--			<version>${weld-servlet.version}</version>-->
<!--		</dependency>-->
		<dependency>
			<groupId>org.jboss.weld.servlet</groupId>
			<artifactId>weld-servlet-shaded</artifactId>
			<version>${weld-servlet.version}</version>
		</dependency>

		<!-- JPA -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core-jakarta</artifactId>
			<version>${hibernate-core.version}</version>
			<exclusions>
				<!-- without exclusion of jandex in hibernate a no such method error is raised -->
				<!-- with    exclusion an explicit dependency to jandex is needed (see below)  -->
				<!-- note that jandex is referenced with groupId io.smallrye actually          -->
				<exclusion>
					<groupId>org.jboss</groupId>
					<artifactId>jandex</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- individual dependency to jandex to accomplish necessary exclusion of jandex in -->
		<!-- hibernate-core-jakarta (see above)                                             -->
		<dependency>
			<groupId>io.smallrye</groupId>
			<artifactId>jandex</artifactId>
			<version>${jandex.version}</version>
		</dependency>
	</dependencies>
	<build>
		<!--finalName>${project.artifactId}</finalName -->
		<!-- If Uncomment this will create another .war with this name-->
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.11.0</version>
			</plugin>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<url>http://localhost:8080/manager/text</url>
					<username>admin</username>
					<password>admin</password>
					<server>TomcatServer</server>
					<path>/jakarta-ee9-webapp-cdi</path><!--Will change the default path -> <path>/${project.artifactId}</path> -->
					<update>true</update>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.2.2</version>
				<configuration>
					<!-- false means that If the web.xml descriptor file doesn't
					exists skip error -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
